name: QuadraX CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Test Smart Contracts
  contract-tests:
    name: Smart Contract Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npx hardhat compile

      - name: Run tests
        run: npm test

      - name: Generate coverage report
        run: npx hardhat coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: contracts

  # Build and Test Frontend
  frontend-tests:
    name: Frontend Build & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint code
        working-directory: ./frontend
        run: npm run lint

      - name: Build application
        working-directory: ./frontend
        env:
          NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID }}
          NEXT_PUBLIC_HEDERA_RPC_URL: https://testnet.hashio.io/api
          NEXT_PUBLIC_CHAIN_ID: 296
          NEXT_PUBLIC_TICTACTOE_CONTRACT: "0x0000000000000000000000000000000000000000"
          NEXT_PUBLIC_STAKING_CONTRACT: "0x0000000000000000000000000000000000000000"
          NEXT_PUBLIC_PYUSD_TOKEN: "0x0000000000000000000000000000000000000000"
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/.next
          retention-days: 7

  # Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Audit contracts
        run: npm audit --audit-level=moderate

      - name: Audit frontend
        working-directory: ./frontend
        run: npm audit --audit-level=moderate

  # Deploy to Vercel (only on main branch)
  deploy-vercel:
    name: Deploy to Vercel
    needs: [contract-tests, frontend-tests, security-audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  # Optional: Deploy contracts to Hedera Testnet
  deploy-contracts:
    name: Deploy Contracts to Hedera Testnet
    needs: [contract-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Hedera Testnet
        env:
          PRIVATE_KEY: ${{ secrets.HEDERA_PRIVATE_KEY }}
          PYUSD_TOKEN_ADDRESS: ${{ secrets.PYUSD_TOKEN_ADDRESS }}
          PLATFORM_WALLET: ${{ secrets.PLATFORM_WALLET }}
        run: npx hardhat run scripts/deploy.js --network hedera-testnet

      - name: Upload deployment info
        uses: actions/upload-artifact@v3
        with:
          name: deployment-info
          path: deployments/hedera-testnet-latest.json
          retention-days: 30
